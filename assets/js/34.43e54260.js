(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{349:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("想要了解事件循环、消息队列，我们先要解决以下几个疑惑：")]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("JavaScript是一门单线程的语言，为什么还会有异步的概念，工作中会经常遇到异步代码？")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("如果我们的ajax请求是同步的，那么ajax请求后面的代码就需要等待ajax返回结果后才能执行，这种耗时较长的任务阻塞了后面代码的执行，浪费了cup的算力。从用户角度来讲，这种阻塞的情况会导致页面卡主，用户只能干瞪眼儿等着，体验极差。想想如果是你，会不会掏出搬砖给开发者展示一下十八般武艺？")]),t._v(" "),a("p",[t._v("异步任务就很好的解决了这个问题，当我们发起ajax请求后，异步任务交给工作线程去做，主线程继续执行后面的任务，等异步任务完成后再去执行异步的回调。这样既不浪费系统资源，也不会造成卡顿页面，所以我们需要异步任务来让用户放下手中的板砖。")]),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("要理解事件循环和消息队列，我们需要了解两个概念：")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("下方函数的打印结果是什么：")]),t._v(" "),t._m(7),t._m(8),t._v(" "),a("p",[t._v("如果你答对了，那么恭喜你，对于这部分的内容你已经掌握了。如果答错了，回过头再看看前面讲过的运行机制。")]),t._v(" "),t._m(9),t._v(" "),a("p",[t._v("假设有一个很长的列表需要遍历，每个item生成一个dom挂载到页面上，这样的同步任务会阻塞线程，用户无法触发页面上的事件。此时我们可以利用异步的特点来解决这个问题。")]),t._v(" "),a("p",[t._v("我们可以将列表拆分成n个小列表，然后依次将n个小列表利用setTimeout生成n个异步任务并执行，主线程循环读取消息队列中的消息。")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop",target:"_blank",rel:"noopener noreferrer"}},[t._v("并发模型与事件循环\n"),a("OutboundLink")],1)])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"事件循环与消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件循环与消息队列","aria-hidden":"true"}},[this._v("#")]),this._v(" 事件循环与消息队列")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"既然是单线程，为什么还有异步的说法？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#既然是单线程，为什么还有异步的说法？","aria-hidden":"true"}},[this._v("#")]),this._v(" 既然是单线程，为什么还有异步的说法？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("关于单线程，是指js引擎中负责解释和执行JavaScript代码的线程只有一个，也可称为主线程。事实上还有其他线程存在，如处理ajax请求的线程，处理dom事件的线程，定时器线程等，这些线程大部分由宿主(浏览器Web API,NodeJS等)提供。这里我们不具体讲他们的分类，暂且把它们都称为工作线程。这些这些工作线程可以和主线程同时执行任务，所以也就出现了“异步”的概念。"),s("br"),this._v("\n比如我们发起了一个ajax请求，去服务端请求的操作交给工作线程来处理，主线程继续执行后面的任务，这就是一个异步任务。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"为什么要设计出异步任务？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要设计出异步任务？","aria-hidden":"true"}},[this._v("#")]),this._v(" 为什么要设计出异步任务？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"事件循环-消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件循环-消息队列","aria-hidden":"true"}},[this._v("#")]),this._v(" 事件循环/消息队列")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("p",[this._v("函数栈：主线性执行代码的栈。")])]),this._v(" "),s("li",[s("p",[this._v("消息队列(queue)：由js运行时提供的一个存放待处理消息的队列，每个消息都关联着一个用以处理这个消息的函数（比如异步任务发起时传入的回调函数）。")])]),this._v(" "),s("li",[s("p",[this._v("事件循环(Event Loop)：是指主线程清空函数栈后，js引擎从消息队列中取出一个消息，并作为输入参数调用与之关联的用于处理消息的函数，将这个函数推入函数栈，主线程来执行它。当函数栈清空后，重复前面的操作，继续处理下一个消息。js引擎从消息队列中循环获取消息的过程就是事件循环。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"检查-你是否真的理解了本章内容？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查-你是否真的理解了本章内容？","aria-hidden":"true"}},[this._v("#")]),this._v(" 检查-你是否真的理解了本章内容？")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("500")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("正确的输出是："),s("code",[this._v("1 3 5 4 2")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"巧用事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#巧用事件循环","aria-hidden":"true"}},[this._v("#")]),this._v(" 巧用事件循环")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("js引擎始终只有一个线程，执行函数栈。\n一个 JavaScript 运行时包含了一个待处理的消息队列。每一个消息都关联着一个用以处理这个消息的函数。\nrefs:")])])}],!1,null,null,null);s.default=e.exports}}]);