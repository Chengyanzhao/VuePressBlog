(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{346:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("s代码在知行时，并非完全按照从上至下的顺序执行。如：")]),t._v(" "),t._m(1),t._m(2),t._v(" "),a("p",[t._v("那上面那段代码来说，经过编译器编译后的代码如下：")]),t._v(" "),t._m(3),a("p",[t._v("在js引擎解释最上面的原始代码时，经过如下步骤：")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("我们知道js引擎在执行代码时，会先在作用域中进行LHS或RHS来查找变量。若没有变量提升，则js引擎无法进行取值或赋值，必须先由编译器对变量进行提升。\njs引擎在解释代码时，先由编译器编译代码，将变量、函数声明提取至作用域顶部，以便js引擎在执行代码时可以在作用域中查找、操作变量。")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Hoisting",target:"_blank",rel:"noopener noreferrer"}},[t._v("变量提升"),a("OutboundLink")],1)])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"javascript的变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript的变量提升","aria-hidden":"true"}},[this._v("#")]),this._v(" javascript的变量提升")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 'foo'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"变量提升过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 变量提升过程")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 变量提升")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a\n"),a("span",{attrs:{class:"token comment"}},[t._v("// js引擎按照顺序执行经过变量提升后的代码")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("引擎在解释JavaScript代码前先通过编译器对其编译。")]),this._v(" "),s("li",[this._v("编译时的一部分工作就是找到所有的声明，并用合适的作用域将他们关联起来，以便js引擎操作变量。")]),this._v(" "),s("li",[this._v("js引擎按照顺序执行提升后的代码。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"为什么要进行变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进行变量提升","aria-hidden":"true"}},[this._v("#")]),this._v(" 为什么要进行变量提升")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"变量提升规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升规则","aria-hidden":"true"}},[this._v("#")]),this._v(" 变量提升规则")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("函数声明与变量声明会被提升，函数表达式不会被提升，但其实函数表达式就是变量声明，会将变量提升。")]),this._v(" "),s("li",[this._v("先提升函数声明，再提升变量声明。若变量名与函数名相同，则会产生覆盖。")]),this._v(" "),s("li",[this._v("重复的函数声明提升后者会覆盖前者")]),this._v(" "),s("li",[this._v("每个作用域都会提升，也就是说进入一个作用域前，作用域内部先进行变量提升。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"mdn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mdn","aria-hidden":"true"}},[this._v("#")]),this._v(" MDN")])}],!1,null,null,null);s.default=e.exports}}]);